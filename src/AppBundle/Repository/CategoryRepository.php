<?php
namespace AppBundle\Repository;

use Doctrine\ORM\Query\Expr;

/**
 * CategoryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CategoryRepository extends \Doctrine\ORM\EntityRepository
{
    public function findSeasonData($season) {
        $qb = $this->createQueryBuilder('c')
            ->join('c.type', 'cType')
            ->addSelect('cType')
            ->leftJoin('cType.ste', 'ste')
            ->addSelect('ste')
            ->leftJoin('ste.entry', 'e')
            ->addSelect('e')
            ->leftJoin('ste.csd', 'csd', Expr\Join::WITH, 'csd.category = c.id')
            ->addSelect('csd')
            ->where('ste.season = :season OR ste.season IS NULL')
            ->setParameter('season', $season)
        ;
        return $qb->getQuery()->getResult();
    }

    public function findSeasonCategoryData($season, $category) {
        $qb = $this->createQueryBuilder('c')
            ->join('c.type', 'cType')
            ->addSelect('cType')
            ->leftJoin('cType.ste', 'ste')
            ->addSelect('ste')
            ->leftJoin('ste.entry', 'e')
            ->addSelect('e')
            ->leftJoin('ste.csd', 'csd', Expr\Join::WITH, 'csd.category = c.id')
            ->addSelect('csd')
            ->where('(ste.season = :season OR ste.season IS NULL)')
            ->andWhere('c.id = :category')
            ->setParameter('season', $season)
            ->setParameter('category', $category->getId())
        ;
        return $qb->getQuery()->getOneOrNullResult();
    }
}
